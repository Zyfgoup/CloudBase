server:
  port: 8888
spring:
  redis:
    host: localhost
    password: 123456
    port: 6379
  application:
    name: api-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true  #表明gateway开启服务注册和发现的功能，并且spring cloud gateway自动根据服务发现为每一个服务创建了一个router，这个router将以服务名开头的请求路径转发到对应的服务。
          lowerCaseServiceId: true   #是将请求路径上的服务名配置为小写（因为服务注册的时候，向注册中心注册时将服务名转成大写的了），比如以/service-hi/*的请求路径被路由转发到服务名为service-hi的服务上。
      routes:
        - id: cloudbase-consumer
          uri: lb://cloudbase-consumer
          predicates: # 断言，路径相匹配的进行路由  test在实际应用中应为某个模块的名字 例如/user/**
            - Path=/api/consumer/**
          filters:
            - SwaggerHeaderFilter
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10 #每秒允许处理的请求数量
                redis-rate-limiter.burstCapacity: 20 #每秒最大处理的请求数量
                key-resolver: "#{@ipKeyResolver}"    #限流策略，对应策略的Bean
            - StripPrefix=2  #会把/api/consumer/去掉  然后如果匹配上的话 请求路径就是cloudbase-consumer的地址+/**


#        权限模块  去掉2个前缀
        - id: cloudbase-auth
          uri: lb://cloudbase-auth
          predicates: # 断言，路径相匹配的进行路由  test在实际应用中应为某个模块的名字 例如/user/**
            - Path=/api/auth/**
          filters:
            - SwaggerHeaderFilter
            - StripPrefix=2
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848